version: "3.8"                                      # <-- Версия докер каммпоуса (Если не работает, нужно взять предыдущую версию)

services:                                           # <-- Это место в котором мы описываем все кантейнеры и как они связаны
  mysqldb:                                          # <-- Это название контейнера после запуска
    image: mysql:8                                  # <-- Говорим, что контейнер будет построен на образе mysql:8 (Стандартный для скюл -> 8)
    restart: unless-stopped                         # <-- Это не обязательный параметр (Говорит что делать в случае падения контейнера
    env_file: .env                                  # <-- Говорим где взять конфиги и переменные для них (подключение к базе)
    environment:                                    # <-- Задаем параметры с которыми создастся сервер (пароль и имя базы -> Записаны в .env)
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:                                          # <-- Нужен для связи внутреннего и внешнего порта (Записаны в .env)
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT    # <-- Говорит что ждет цифры, но в переменных они и лежат они же (Записаны в .env)
    volumes:                                        # <-- Создаем value (Сохраняется папка контейнера вот здесь --> /var/lib/mysql) Нужно указать именно эту папку
      - db:/var/lib/mysql
  app:                                              # <-- Говорим какой контейнер от какого зависит
    depends_on:                                     # <-- Зависит от mysql (Наше приложение запустится раньше базы)
      - mysqldb
    build: .                                        # <-- Говорим что мы билдим все на уровне докерфайла
    restart: on-failure                             # <-- Говорим перезапускайся если что-то упало
    env_file: .env                                  # <-- Говорим где брать параметры (Записаны в .env)
    ports:                                          # <-- Порты спринга (Записаны в .env)
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT      # <-- Переменная с портом (Записаны в .env)
    environment:                                    # <-- Можем указать какие переменные хотим поменять
      SPRING_APPLICATION_JSON: '{                   
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false&allowPublicKeyRetrieval=true",
        "spring.datasource.username" : "$MYSQLDB_USER",                                                                
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",                                                       
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQLDialect",                              
        "spring.jpa.hibernate.ddl-auto" : "update"                                                                     
      }'
    volumes:                      # <-- Создаем переменные для связи с другим контейнером (Связываем их и они берут данные в одном месте)
      - .m2:/root/.m2 # #         # <-- это адрес на линуксе, где находятся зависимости

volumes:                          # <-- Постоянное хранилище информации для контейнеров
  db:
  .m2: